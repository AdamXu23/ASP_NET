// <auto-generated />
using EFCore_CodeFirstNewDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore_CodeFirstNewDB.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore_CodeFirstNewDB.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            BlogName = "Kevin's Blog",
                            Url = "blogs.com.tw/kevin",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 2,
                            BlogName = "David's Blog",
                            Url = "blogs.com.tw/david",
                            UserId = 2
                        },
                        new
                        {
                            BlogId = 3,
                            BlogName = "Mary's Blog",
                            Url = "blogs.com.tw/mary",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("EFCore_CodeFirstNewDB.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            BlogId = 1,
                            Content = "ASP.NET Core Tutorial",
                            Title = "ASP.NET Core"
                        },
                        new
                        {
                            PostId = 2,
                            BlogId = 1,
                            Content = "Entity Framework Core Tutorial",
                            Title = "Entity Framework Core"
                        },
                        new
                        {
                            PostId = 3,
                            BlogId = 2,
                            Content = "Vue.js Tutorial",
                            Title = "Vue.js"
                        },
                        new
                        {
                            PostId = 4,
                            BlogId = 3,
                            Content = "Bootstrap 4 Tutorial",
                            Title = "Bootstrap 4"
                        });
                });

            modelBuilder.Entity("EFCore_CodeFirstNewDB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "kevin@gmail.com",
                            UserName = "Kevin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "david@gmail.com",
                            UserName = "David"
                        },
                        new
                        {
                            Id = 3,
                            Email = "mary@gmail.com",
                            UserName = "Mary"
                        });
                });

            modelBuilder.Entity("EFCore_CodeFirstNewDB.Models.Blog", b =>
                {
                    b.HasOne("EFCore_CodeFirstNewDB.Models.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore_CodeFirstNewDB.Models.Post", b =>
                {
                    b.HasOne("EFCore_CodeFirstNewDB.Models.Blog", "Blog")
                        .WithMany("Post")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
